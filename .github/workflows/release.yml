name: Build and Release AppImage

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-appimage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-venv nodejs npm wget imagemagick fuse
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        echo "📦 Installing frontend dependencies..."
        npm install --verbose
        echo "✅ Frontend dependencies installed"
        
    - name: Make build script executable
      run: |
        chmod +x build-appimage.sh optimize-frontend.sh
        echo "✅ Build scripts made executable"
        
    - name: Debug environment
      run: |
        echo "🔍 Environment check:"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Python version: $(python3 --version)"
        echo "Working directory: $(pwd)"
        echo "Directory contents:"
        ls -la
      
    - name: Get version from tag
      id: get_version
      run: |
        if [ "${{ github.ref_type }}" = "tag" ]; then
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          echo "🏷️ Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        else
          VERSION="dev-$(date +%Y%m%d-%H%M%S)"
          echo "🏷️ Generated dev version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: Optimize frontend
      run: |
        echo "⚡ Optimizing frontend..."
        ./optimize-frontend.sh
        echo "✅ Frontend optimized"
      
    - name: Build AppImage
      run: |
        echo "🏗️ Building AppImage with version: ${{ steps.get_version.outputs.version }}"
        ./build-appimage.sh ${{ steps.get_version.outputs.version }}
        echo "✅ AppImage build completed"
        
    - name: Verify AppImage
      run: |
        ls -la *.AppImage
        file *.AppImage
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: DataForge Reader ${{ steps.get_version.outputs.version }}
        body: |
          ## DataForge Reader ${{ steps.get_version.outputs.version }}
          
          ### 📦 Portable Linux Application
          
          **Download:** `DataForge-Reader-${{ steps.get_version.outputs.version }}-x86_64.AppImage`
          
          ### 🚀 Quick Start
          ```bash
          # Download and run
          chmod +x DataForge-Reader-*-x86_64.AppImage
          ./DataForge-Reader-*-x86_64.AppImage
          ```
          
          ### ✨ Features
          - 📄 **PDF Processing** - Upload and parse PDF documents
          - 🏷️ **Smart Annotation** - AI-powered data labeling
          - 📊 **Dataset Export** - Multiple format support (JSON, CSV, JSONL)
          - 📋 **Custom Templates** - Design your own data extraction templates
          - 🔍 **Data Analytics** - Built-in dataset analysis tools
          - 💾 **Project Management** - Save and manage multiple projects
          
          ### 🖥️ System Requirements
          - **OS:** Linux (glibc 2.17+)
          - **Architecture:** x86_64
          - **RAM:** 512MB minimum, 2GB recommended
          - **Disk:** 200MB for AppImage + storage for your data
          
          ### 🛠️ What's New
          - Self-contained portable application
          - No installation required
          - Automatic port detection
          - Improved startup performance
          
          ### 🐛 Known Issues
          - First startup may take 3-5 seconds
          - Requires FUSE on some older systems
          
          ### 📚 Documentation
          See [User Guide](https://github.com/${{ github.repository }}/blob/main/USER_GUIDE.md) for detailed usage instructions.
          
          ---
          
          **File Size:** ~35-40MB | **No dependencies required** | **Works on most Linux distributions**
        draft: false
        prerelease: false
        files: |
          DataForge-Reader-*-x86_64.AppImage
        
    - name: Release completed
      run: |
        echo "✅ AppImage built and released successfully!"
        echo "📦 File: DataForge-Reader-${{ steps.get_version.outputs.version }}-x86_64.AppImage"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.version }}"